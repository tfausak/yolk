{
  "//": "https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide",
  "patterns": [
    {
      "include": "#character"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#number"
    },
    {
      "include": "#reserved"
    },
    {
      "include": "#string"
    }
  ],
  "repository": {
    "blockComment": {
      "begin": "{-",
      "end": "-}",
      "name": "comment.block.haskell",
      "patterns": [
        {
          "include": "#blockComment"
        }
      ]
    },
    "character": {
      "captures": {
        "1": {
          "name": "constant.character.escape.haskell"
        }
      },
      "match": "'(?:[^'\\\\n\\r]|(\\\\(?:[abfnrtv\\\\\"']|\\^[A-Z@\\[\\\\\\]\\^_]|(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL)|[0-9]+|o[0-7]+|x[0-9A-Fa-f]+)))'",
      "name": "constant.character.haskell"
    },
    "comment": {
      "patterns": [
        {
          "include": "#blockComment"
        },
        {
          "include": "#lineComment"
        }
      ]
    },
    "lineComment": {
      "match": "--.*",
      "name": "comment.line.double-dash.haskell"
    },
    "number": {
      "match": "[0-9]+[eE][+-]?[0-9]+|[0-9]+[.][0-9]+(?:[eE][+-]?[0-9]+)?|0[oO][0-7]+|0[xX][0-9A-Fa-f]+|[0-9]+",
      "name": "constant.numeric.haskell"
    },
    "reserved": {
      "patterns": [
        {
          "include": "#reservedIdentifier"
        },
        {
          "include": "#reservedOperator"
        }
      ]
    },
    "reservedIdentifier": {
      "match": "case|class|data|default|deriving|do|else|foreign|if|import|in(?:fix[lr]?|stance)?|let|module|newtype|of|then|type|where|_",
      "name": "keyword.haskell"
    },
    "reservedOperator": {
      "match": "[.][.]|::?|=|\\\\|[|]|<-|->|@|~|=>",
      "name": "keyword.operator.haskell"
    },
    "string": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.haskell",
      "patterns": [
        {
          "include": "#stringCharacter"
        }
      ]
    },
    "stringCharacter": {
      "captures": {
        "1": {
          "name": "comment.block.haskell"
        },
        "2": {
          "name": "constant.character.escape.haskell"
        }
      },
      "match": "(^[ \\t]*\\\\|\\\\[ \\t]+\\\\|\\\\[ \\t]*$)|[^\"\\\\\\n\\r]|(\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@\\[\\\\\\]\\^_]|(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL)|[0-9]+|o[0-7]+|x[0-9A-Fa-f]+))"
    }
  },
  "scopeName": "source.haskell"
}
